sudo su
su postgres
-- 1
nano /etc/postgresql/10/main/postgresql.conf

shared_preload_libraries = 'pg_stat_statements'

pg_stat_statements.max = 10000
pg_stat_statements.track = all

psql ucasoft -U postgres

CREATE EXTENSION pg_stat_statements;
SELECT pg_stat_statements_reset();

-- 2
apt-get install pgbadger

nano /etc/postgresql/10/main/postgresql.conf

log_line_prefix = '%t [%p]: user=%u,db=%d,app=%a,client=%h '
log_min_duration_statement = 0
log_checkpoints = on
log_connections = on
log_disconnections = on
log_lock_waits = on
log_temp_files = 0
log_autovacuum_min_duration = 0
log_error_verbosity = default
lc_messages = 'C'

logrotate -f /etc/logrotate.d/postgresql-common
/etc/init.d/postgresql restart

-- 3
mkdir /var/backups/ucasoft
mkdir /etc/ucasoft
mkdir /var/log/ucasoft

chown -R postgres /var/log/ucasoft/

-- 4
nano /etc/crontab

30 3    * * *   root    pgbadger -I -q -O /var/log/ucasoft/

-- 5
nano /etc/crontab

45 3    * * *   postgres    /etc/ucasoft/sgbd.sh >> /var/log/ucasoft/sgbd.log 2>&1

nano /etc/ucasoft/sgbd.sh

    -- dentro del archivo "sgbd.sh"
        #!/bin/sh

        psql < my.sql

chmod a+x /etc/ucasoft/sgbd.sh

nano /etc/ucasoft/my.sql

    -- dentro del archivo "my.sql"
        -- a
        select now();

        -- b
        SELECT d.datname AS Name, pg_catalog.pg_get_userbyid(d.datdba) AS Owner,
          CASE WHEN pg_catalog.has_database_privilege(d.datname, 'CONNECT')
            THEN pg_catalog.pg_size_pretty(pg_catalog.pg_database_size(d.datname)) 
            ELSE 'No Access' 
          END AS SIZE 
        FROM pg_catalog.pg_database d 
        ORDER BY 
          CASE WHEN pg_catalog.has_database_privilege(d.datname, 'CONNECT') 
            THEN pg_catalog.pg_database_size(d.datname)
            ELSE NULL 
        END;

        -- c
        \c ucasoft

        SELECT nspname || '.' || relname AS "relation",
           pg_size_pretty(pg_total_relation_size(C.oid)) AS "total_size"
         FROM pg_class C
         LEFT JOIN pg_namespace N ON (N.oid = C.relnamespace)
         WHERE nspname NOT IN ('pg_catalog', 'information_schema')
           AND C.relkind <> 'i'
           AND nspname !~ '^pg_toast'
         ORDER BY pg_total_relation_size(C.oid) DESC;

        -- d
        \x

        -- e
        SELECT now() - query_start as "runtime", usename, datname, wait_event, state, query
        FROM  pg_stat_activity
        WHERE now() - query_start > '10 minutes'::interval
        ORDER BY runtime DESC;

        -- f
        SELECT query, calls, total_time, rows, 100.0 * shared_blks_hit /
               nullif(shared_blks_hit + shared_blks_read, 0) AS hit_percent
        FROM pg_stat_statements ORDER BY total_time DESC LIMIT 10;

-- 6
nano /etc/crontab

00 4    * * 0   root    /etc/ucasoft/backup.sh 2>&1 | /usr/bin/logger -t backup-ucasoft

nano /etc/ucasoft/backup.sh

    -- dentro del archivo "backup.sh"
    #!/bin/sh

    fecha_archivo = `date +%Y%m%d-%H%M`
    fichero_respaldo = ucasoft-$fecha_archivo.bkp

    pg_dump -U admin -v ucasoft > /var/backups/ucasoft/$fichero_respaldo

chmod a+x /etc/ucasoft/backup.sh

nano /root/.pgpass

    -- dentro del archivo ".pgpass"
    # hostname:port:database:username:password
    localhost:ucasoft:admin:0110

chmod 0600 /root/.pgpass

