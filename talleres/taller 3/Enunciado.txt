Ejercicio 1)

Como puede observar en el archivo adjunto, las tablas que tienen importancia para lo solicitado son alumno e inscripcion, y como no se pueden hacer composiciones (joins) se tiene que "denormalizar". 

Dado que no se pretende invertir mucho tiempo en este ejercicio, no se podrá utilizar una estructura "elegante" para el almacenamiento (como la siguiente), porque en tal caso no se podría hacer fácilmente agrupación sobre el valor (calificacion_numerica) de las notas sin tener que programar una función de usuario que extraiga dicho valor. 

En cualquier caso realice algunos inserts y selects básicos sobre la siguiente familia de columnas.

CREATE TYPE tipo_nota (
    calificacion_numerica decimal,
    calificacion_cualitativa varchar
);

CREATE TABLE inscripcion(
    NIE_alumno varchar,
    denominacion_nivel_grado_asignatura varchar,
    numero_grado_asignatura tinyint,
    numero_anyo_asignatura int,
    nombre_asignatura varchar,
    nombre_alumno varchar,   
    notas map <varchar,frozen <tipo_nota>>,
    PRIMARY KEY (numero_anyo_asignatura,denominacion_nivel_grado_asignatura,numero_grado_asignatura,nombre_asignatura,NIE_alumno)
);

Tome en cuenta que la sintaxis de un mapa de UDT como ese es: 

{
 'clave1':{campo:valor,campo:valor},
 'clave2':{campo:valor,campo:valor}
}

Si el valor es de tipo texto (como en el caso de la calificacion_cualitativa) tendrá que expresarlo entre comillas simples ''.
Ejercicio 2)

Debido a la limitación vista en el ejercicio 1, se evidencia que es necesario trasladar la información de la BD relacional a la BD en Cassandra mediante la ejecución de un proceso diario de ETL (una buena herramienta libre para ello es http://scriptella.org/ o el conocido como "Kettle" de Pentaho https://help.pentaho.com/Documentation/8.2/Products/Data_Integration), con el que se efectuará la extracción de datos, el promediado de todas las notas obtenidas hasta la fecha por cada alumno y su posterior inserción en Cassandra, en tal sentido:

    Cree en Cassandra una familia de columnas (tabla) similar a la anterior de nombre "notas", en la que se sustituya la columna de tipo mapa "notas" por otra denominada "nota_promedio" de tipo decimal.
    Efectúe inserts en el que se consideren por lo menos dos años, dos niveles por año, dos grados por nivel y año, dos alumnos por grado nivel y año (16 inserts). Ejecute un select * para comprobar su funcionamiento.

Ejercicio 3)

Considerando los datos ingresados en el ejercicio 2:

    Efectúe consultas que calculen el promedio, máximo y mínimo de notas por año, nivel y grado. Deberá elaborar una consulta por cada año utilizando en el WHERE la columna de partición, y agrupar y ordenar usando las columnas de clustering nivel y grado.
    Calcule la nota máxima por año y después obtenga el nombre y NIE de quien/es obtuvieron dicha nota. Dado que en Cassandra no es posible realizar subconsultas, deberá realizar primero la consulta de la nota máxima agrupando por año y luego efectuar consultas por cada año y nota para obtener el nombre y NIE (no olvide expresar ALLOW FILTERING para que Cassandra pueda hacer la búsqueda).